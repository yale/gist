google translate API
This is based on the documentation found here
http://code.google.com/apis/ajaxlanguage/documentation/#Versioning
look for the paragraph 'Flash and other Non-Javascript Environments'

INSTALL
========
include the github source in your Rubygem sources (see http://gems.github.com/)
to install the gem
sudo gem install elisehuard-google_translate

HOWTO
======
include module GoogleTranslate (or use it as namespace, as required)
translate:
translator = Translator.new("en","fr") # so several translations can be performed with this new object
result = translator.translate("nice day today") # returns "belle journ√©e aujourd'hui"

language detection:
language = LanguageDetect.detect("il fait beau aujourd'hui") # returns "fr"


TODO
======
* It's not mandatory, but they ask for an API key to be included.  This could be added later on if required, preferrably in a YAML style config file.
* handle untranslateable strings
* maybe introduce some light caching for translation to avoid requests

Look at specs for behaviour.

Suggestions are welcome !

License (MIT)
==============
Copyright (c) 2009 Elise Huard

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.